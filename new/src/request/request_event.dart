import 'package:logging/logging.dart';
import 'package:routingkit/routingkit.dart';
import 'package:webfetch/webfetch.dart';

import '../application.dart';
import '../http/cookies.dart';
import '../routing/route.dart';
import '../server/server.dart';
import '../utilities/storage.dart';

abstract interface class RequestEvent {
  /// The application that received the request.
  Application get application;

  /// Current request event storage.
  Storage get storage;

  /// Current event request identifier.
  ///
  /// The value read from request header `X-Request-ID` or generated by the
  /// application.
  String get identifier;

  /// Cookie manager for this request.
  Cookies get cookies;

  /// Current request logger.
  Logger get logger;

  /// Current route [Parameters].
  Parameters get params;

  /// Current request matched route.
  Route? get route;

  /// Current request instance.
  Request get request;

  /// Current request connection.
  ///
  /// The value read from request header `X-Forwarded-For`.
  ///
  /// If the header is not present, the value is read from the connection info.
  HostAddress get remoteAddress;
}
